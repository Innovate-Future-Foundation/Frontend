---
- name: Stop Jenkins service
  systemd:
    name: jenkins
    state: stopped

- name: Configure Jenkins home in systemd override directory
  file:
    path: /etc/systemd/system/jenkins.service.d
    state: directory
    mode: '0755'

- name: Create systemd override file
  copy:
    dest: /etc/systemd/system/jenkins.service.d/override.conf
    content: |
      [Service]
      Environment="JENKINS_HOME=/var/lib/jenkins"

- name: Configure Jenkins home in defaults file
  lineinfile:
    path: /etc/default/jenkins
    regexp: '^JENKINS_HOME='
    line: 'JENKINS_HOME=/var/lib/jenkins'
    create: yes

- name: Create required directories
  file:
    path: "{{ item }}"
    state: directory
    owner: jenkins
    group: jenkins
    mode: '0755'
  with_items:
    - "{{ jenkins_home }}/init.groovy.d"
    - "{{ jenkins_home }}/casc_configs"

- name: Copy configuration scripts
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: jenkins
    group: jenkins
    mode: '0644'
  with_items:
    - { src: 'create-pipeline.groovy.j2', dest: '{{ jenkins_home }}/init.groovy.d/create-pipeline.groovy' }
    - { src: 'basic-security.groovy.j2', dest: '{{ jenkins_home }}/init.groovy.d/basic-security.groovy' }
    - { src: 'jenkins.yml.j2', dest: '{{ jenkins_home }}/casc_configs/jenkins.yaml' }
  notify: restart jenkins

- name: Set Jenkins directory ownership
  file:
    path: "{{ jenkins_home }}"
    owner: jenkins
    group: jenkins
    recurse: yes

- name: Add Jenkins user to Docker group
  user:
    name: jenkins
    groups: docker
    append: yes

- name: Reload systemd configurations
  systemd:
    daemon_reload: yes

- name: Start and enable Jenkins
  systemd:
    name: jenkins
    state: started
    enabled: yes
  notify: verify jenkins start