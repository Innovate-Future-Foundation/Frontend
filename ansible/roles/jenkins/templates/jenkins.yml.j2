jenkins:
  systemMessage: "Jenkins configured automatically by Configuration as Code plugin"
  
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: "{{ jenkins_admin_username }}"
          password: "{{ jenkins_admin_password }}"

  authorizationStrategy:
    globalMatrix:
      permissions:
        - "Overall/Administer:{{ jenkins_admin_username }}"
        - "Overall/Read:authenticated"
        - "Job/Create:{{ jenkins_admin_username }}"
        - "Job/Delete:{{ jenkins_admin_username }}"
        - "Job/Configure:{{ jenkins_admin_username }}"
        - "Job/Read:authenticated"
        - "Job/Build:authenticated"
        - "Job/Workspace:authenticated"
        - "Overall/RunScripts:{{ jenkins_admin_username }}"

  numExecutors: 2

  tool:
    nodejs:
      installations:
        - name: "Node20"
          properties:
            - installSource:
                installers:
                  - nodeJS:
                      id: "20.0.0"
                      acceptLicense: true

  credentials:
    system:
      domainCredentials:
        - credentials:
            - aws:
                scope: GLOBAL
                id: "aws-credentials"
                accessKey: "{{ jenkins_aws_access_key }}"
                secretKey: "{{ jenkins_aws_secret_key }}"
                description: "AWS credentials"
                iamRoleArn: ""
                iamMfaSerialNumber: ""
            - usernamePassword:
                scope: GLOBAL
                id: "github-credentials"
                username: "{{ jenkins_github_username }}"
                password: "{{ jenkins_github_token }}"
                description: "GitHub credentials"

unclassified:
  location:
    url: "https://jenkins.{{ domain_name }}"
  gitHubPluginConfig:
    configs:
      - credentialsId: "github-credentials"
        name: "GitHub"

security:
  gitHostKeyVerificationConfiguration:
    sshHostKeyVerificationStrategy: "acceptFirstConnectionStrategy"
  queueItemAuthenticator:
    authenticators:
      - global:
          strategy: "triggeringUsersAuthorizationStrategy"

clouds: []

notifier:
  mail:
    recipientList: ""
    defaultSuffix: ""